@using PagedList.Core
@model IPagedList<CapstoneTraineeManagement.DTO.Trainee>

@{
    ViewData["Title"] = "Trainee Management";
}

<h1>Trainee Management</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<p>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Add New Trainee
    </a>
</p>

<div class="alert alert-secondary">
    <strong>Page Info:</strong>
    Showing page <strong>@Model.PageNumber</strong> of <strong>@Model.PageCount</strong>.
    Total Trainees: <strong>@Model.TotalItemCount</strong>.
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>Email</th>
                <th>Contact No</th>
                <th>Category</th>
                <th>State</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                    <td>@((DateTime.Today.Year - item.Dob.Year))</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.ContactNo)</td>
                    <td>@item.CategoryLookUp?.ValueCode</td>
                    <td>@item.StateLookUp?.ValueCode</td>
                    <td class="text-end">
                        <a asp-action="Edit" asp-route-id="@item.TraineeId" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.TraineeId" class="btn btn-sm btn-info">View</a>
                        <a asp-action="Delete" asp-route-id="@item.TraineeId" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@* <div class="mt-3">
    @if (Model.PageCount > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">

                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
                </li>

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
</div> *@

<div class="mt-3 d-flex justify-content-end">
    @if (Model.PageCount > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
                </li>

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>
